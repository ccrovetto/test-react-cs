{"version":3,"sources":["services/api.js","store/actions/counters.js","store/reducers/counters.js","store/reducers/index.js","components/AddCounter/index.js","components/CounterFilter/index.js","components/CounterList/index.js","Containers/Body/index.js","root/index.js","serviceWorker.js","index.js"],"names":["request","axios","create","baseURL","concat","process","defaults","headers","post","api","getCounters","get","then","data","addCounter","title","increaseCounter","idCounter","id","decreaseCounter","removeCounter","delete","dispatch","getState","type","apiService","payload","sort","orderBy","counters","catch","err","setCounter","arguments","length","undefined","map","item","count","a","b","genreA","toUpperCase","genreB","comparison","initialState","isLoading","error","hasError","success","counterReduce","state","action","Object","objectSpread2","reducers","combineReducers","CounterAddForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","target","value","preventDefault","onSubmit","react_default","createElement","Form","FormGroup","Label","htmlFor","Input","name","onChange","Button","className","color","React","Component","CounterFilter","_this$props","filterValue","rule","CounterList","getTotalCounts","total","getFilteredData","forEach","_this$state","filterRules","indexRule","countersState","filter","indexOf","parseInt","_this$state2","onOrder","onDecrease","onIncrease","onRemove","Row","Col","md","components_CounterFilter","rules","searchPhrase","onClick","Table","hover","responsive","key","Body","handleAddCounter","handleIncrease","handleDecrease","handleRemove","handleOrderBy","order","setOrder","Jumbotron","xs","AddCounter","components_CounterList","connect","store","createStore","applyMiddleware","thunk","logger","Root","es","Containers_Body","Boolean","window","location","hostname","match","ReactDOM","render","root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6270c3b7.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst request = axios.create({\n  baseURL: `${process.env.REACT_APP_API_BASE_URL}/api/v1`,\n});\n\nrequest.defaults.headers.post['Accept'] = 'application/json';\nrequest.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport const getCounters = () => {\n  return request\n    .get('/counters')\n    .then(data => data.data);\n}\n\nexport const addCounter = (title) => {\n  return request\n    .post('/counter', { title })\n    .then(data => data.data);\n}\n\nexport const increaseCounter = (idCounter) => {\n  return request\n    .post('/counter/inc', {id: idCounter})\n    .then(data => data.data);\n}\n\nexport const decreaseCounter = (idCounter) => {\n  return request\n    .post('/counter/dec', {id: idCounter})\n    .then(data => data.data);\n}\n\nexport const removeCounter = (idCounter) => {\n  return request\n    .delete('/counter', {\n      data: {id: idCounter}\n    })\n    .then(data => data.data);\n}\n\nexport default {\n  getCounters,\n  addCounter,\n  increaseCounter,\n  decreaseCounter,\n  removeCounter,\n};","import apiService from '../../services/api';\n\nexport const FETCH_COUNTERS = \"FETCH_COUNTERS\";\nexport const FETCH_COUNTERS_ERROR = \"FETCH_COUNTERS_ERROR\";\nexport const FETCH_COUNTERS_SUCCESS = \"FETCH_COUNTERS_SUCCESS\";\n\nexport const ADD_COUNTER = \"ADD_COUNTER\";\nexport const ADD_COUNTER_ERROR = \"ADD_COUNTER_ERROR\";\nexport const ADD_COUNTER_SUCCESS = \"ADD_COUNTER_SUCCESS\";\n\nexport const SET_COUNTER = \"SET_COUNTER\";\nexport const SET_COUNTER_ERROR = \"SET_COUNTER_ERROR\";\nexport const SET_COUNTER_SUCCESS = \"SET_COUNTER_SUCCESS\";\n\nexport const REMOVE_COUNTER = \"REMOVE_COUNTER\";\nexport const REMOVE_COUNTER_ERROR = \"REMOVE_COUNTER_ERROR\";\nexport const REMOVE_COUNTER_SUCCESS = \"REMOVE_COUNTER_SUCCESS\";\n\nexport const SET_ORDER = \"SET_ORDER\";\n\nexport const getCounters = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: FETCH_COUNTERS\n    });\n    apiService.getCounters()\n      .then(data => dispatch({\n        type: FETCH_COUNTERS_SUCCESS,\n        payload: data.sort(orderBy(getState().counters.orderBy)),\n      }))\n      .catch(err => dispatch({\n        type: FETCH_COUNTERS_ERROR,\n        payload: err\n      }))\n  }\n}\n\nexport const addCounter = title => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: ADD_COUNTER\n    });\n    apiService.addCounter(title)\n      .then(data => dispatch({\n        type: ADD_COUNTER_SUCCESS,\n        payload: getState().counters.data.concat(data).sort(orderBy(getState().counters.orderBy)),\n      }))\n      .catch(err => dispatch({\n        type: ADD_COUNTER_ERROR,\n        payload: err\n      }))\n  }\n}\n\nexport const setCounter = (idCounter, type = 'increase') => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SET_COUNTER\n    });\n    apiService[`${type}Counter`](idCounter)\n      .then(data => dispatch({\n        type: SET_COUNTER_SUCCESS,\n        payload: getState().counters.data.map(item => {\n          if (item.id === data.id) {\n            item.count = data.count\n          }\n          return item;\n        }).sort(orderBy(getState().counters.orderBy)),\n      }))\n      .catch(err => dispatch({\n        type: SET_COUNTER_ERROR,\n        payload: err\n      }))\n  }\n}\n\nexport const removeCounter = idCounter => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: REMOVE_COUNTER\n    });\n    apiService.removeCounter(idCounter)\n      .then(id => dispatch({\n        type: REMOVE_COUNTER_SUCCESS,\n        payload: getState().counters.data.filter(item => item.id !== id).sort(orderBy(getState().counters.orderBy)),\n      }))\n      .catch(err => dispatch({\n        type: REMOVE_COUNTER_ERROR,\n        payload: err\n      }))\n  }\n}\n\nexport const setOrder = (type = 'title') => {\n  return (dispatch, getState) => {\n    const counters = getState().counters.data;\n\n    return dispatch({\n      type: SET_ORDER,\n      payload: {\n        order: type,\n        data: counters.sort(orderBy(type)),\n      },\n    });\n  }\n}\n\nconst orderBy = type => (a, b) => {\n  const genreA = typeof a[type] === 'string' ? a[type].toUpperCase() : a[type];\n  const genreB = typeof b[type] === 'string' ? b[type].toUpperCase() : b[type];\n  \n  let comparison = 0;\n  if (genreA > genreB) {\n    comparison = 1;\n  } else if (genreA < genreB) {\n    comparison = -1;\n  }\n  return comparison;\n}","import {\n  FETCH_COUNTERS,\n  FETCH_COUNTERS_ERROR,\n  FETCH_COUNTERS_SUCCESS,\n  ADD_COUNTER,\n  ADD_COUNTER_ERROR,\n  ADD_COUNTER_SUCCESS,\n  SET_COUNTER,\n  SET_COUNTER_ERROR,\n  SET_COUNTER_SUCCESS,\n  REMOVE_COUNTER,\n  REMOVE_COUNTER_ERROR,\n  REMOVE_COUNTER_SUCCESS,\n  SET_ORDER,\n} from './../actions/counters';\n\nconst initialState = {\n  data: [],\n  isLoading: false,\n  error: null,\n  hasError: false,\n  success: false,\n  orderBy: 'title',\n};\n\nconst counterReduce = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_COUNTERS:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n        error: null,\n      };\n    case FETCH_COUNTERS_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n        error: action.payload,\n      };\n    case FETCH_COUNTERS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case ADD_COUNTER:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n        error: null,\n      };\n    case ADD_COUNTER_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n        error: action.payload,\n      };\n    case ADD_COUNTER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case SET_COUNTER:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n        error: null,\n      };\n    case SET_COUNTER_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n        error: action.payload,\n      };\n    case SET_COUNTER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case REMOVE_COUNTER:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n        error: null,\n      };\n    case REMOVE_COUNTER_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n        error: action.payload,\n      };\n    case REMOVE_COUNTER_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n      };\n    case SET_ORDER:\n      return {\n        ...state,\n        orderBy: action.payload.orderBy,\n        data: action.payload.data,\n      };\n    default:\n      return state;\n  };\n};\n\nexport default counterReduce;","import { combineReducers } from 'redux';\nimport counters from './counters';\n\nconst reducers = combineReducers({\n  counters,\n});\n\nexport default reducers;","import React from 'react';\nimport { Input, Button, Form, FormGroup, Label } from 'reactstrap';\n\nclass CounterAddForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ title: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onSubmit(this.state.title);\n    this.setState({ title: '' });\n  }\n\n  render() {\n    const { title } = this.state;\n\n     return (\n      <Form action=\"#\" onSubmit={this.handleSubmit}>\n        <FormGroup>\n          \n        <Label htmlFor=\"title\">Titulo</Label>\n        <Input type=\"text\" name=\"title\" id=\"title\" value={title} onChange={this.handleChange}  />\n          <Button className=\"my-2\" color=\"primary\">Agregar</Button>\n        </FormGroup>\n          \n      </Form>\n    );\n  }\n}\n\nexport default CounterAddForm;","import React from 'react';\nimport { Input, Button, Form, FormGroup, Label } from 'reactstrap';\n\nclass CounterFilter extends React.Component {\n  render() {\n    const { filterValue, onChange, rule } = this.props;\n\n    return (\n      <div>\n          <FormGroup>\n            <Label htmlFor=\"filterValue\">Buscar</Label>\n            <Input className=\"md\" type=\"text\" name=\"filterValue\" id=\"filterValue\" value={filterValue} onChange={onChange}></Input>\n          </FormGroup>\n      </div>\n    );\n  }\n}\n\nexport default CounterFilter;","import React from 'react';\nimport CounterFilter from '../CounterFilter'\nimport { Table, Button, Form, Label, Row, Col, FormGroup } from 'reactstrap';\n\nclass CounterList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterValue: '',\n      filterRules: [{\n        title: 'Nombre',\n        value: 'title',\n      },\n      {\n        title: 'Menores a',\n        value: 'min',\n      },\n      {\n        title: 'Mayores a',\n        value: 'max',\n      }],\n      indexRule: 0,\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ filterValue: e.target.value })\n  }\n\n  getTotalCounts = () => {\n    let total = 0;\n    this.getFilteredData().forEach(item => {\n      total += item.count;\n    });\n    return total;\n  }\n\n  getFilteredData = () => {\n    const { filterValue, filterRules, indexRule } = this.state;\n    const { data } = this.props.countersState;\n    const rule = filterRules[indexRule].value;\n\n    if (rule === 'title') {\n      return data.filter(item => item.title.indexOf(filterValue) >= 0);\n    }\n\n    if (rule === 'min' && parseInt(filterValue, 10)) {\n      return data.filter(item => item.count < parseInt(filterValue, 10));\n    }\n\n    if (rule === 'max' && parseInt(filterValue, 10)) {\n      return data.filter(item => item.count > parseInt(filterValue, 10));\n    }\n\n    return data;\n  }\n\n  render() {\n    const { filterValue, filterRules, indexRule } = this.state;\n    const { countersState, onOrder, onDecrease, onIncrease, onRemove } = this.props;\n    const { isLoading } = countersState;\n    return (\n      <div className=\"counter-list\">\n        <Row Form>\n          <Col md={6}>\n            <CounterFilter\n              rules=\"\"\n              rule={filterRules[indexRule]}\n              searchPhrase={filterValue}\n              onChange={this.handleChange}\n            />\n          </Col>\n          <Col md={2}>\n          <FormGroup>\n                <Label htmlFor=\"btnf\">Filtrar Por:</Label>\n                <Button id=\"btnf\" type=\"button\" onClick={e => onOrder()}>Nombre</Button>\n            </FormGroup>\n          </Col>\n          <Col md={2}>\n          <FormGroup>\n                <Button className=\"mt-3\" id=\"btn\" type=\"button\" onClick={e => onOrder('count')}>Cantidad</Button>\n            </FormGroup>\n          </Col>\n        </Row>\n        <Table hover responsive>\n          <thead>\n            <tr>\n              <th>Titulo</th>\n              <th>Contadores</th>\n              <th></th>\n              <th>Acciones</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.getFilteredData().map(item => (\n              <tr  key={item.id}>\n                <td>{item.title}</td>\n                <td>{item.count}</td>\n                <td><Button color=\"warning\" onClick={e => onDecrease(item.id)}>1-</Button></td>\n                <td><Button color=\"success\" onClick={e => onIncrease(item.id)}>1+</Button></td>\n                <td><Button color=\"danger\" onClick={e => onRemove(item.id)}>Eliminar</Button></td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        <h4 className=\"counter-list__total\">Total {this.getTotalCounts()}</h4>\n      </div>\n    )\n  }\n}\n\nexport default CounterList;","import React from '../../../node_modules/react';\nimport { connect } from '../../../node_modules/react-redux';\nimport { Jumbotron, Row, Col } from 'reactstrap';\nimport {\n  getCounters,\n  addCounter,\n  removeCounter,\n  setCounter,\n  setOrder\n} from '../../store/actions/counters';\nimport CounterAddForm from '../../components/AddCounter';\nimport CounterList from '../../components/CounterList';\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props.dispatch(getCounters());\n\n    this.handleAddCounter = this.handleAddCounter.bind(this);\n    this.handleIncrease = this.handleIncrease.bind(this);\n    this.handleDecrease = this.handleDecrease.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleOrderBy = this.handleOrderBy.bind(this);\n  }\n\n  handleAddCounter(title) {\n    this.props.dispatch(addCounter(title));\n  }\n\n  handleIncrease(id) {\n    this.props.dispatch(setCounter(id, 'increase'))\n  }\n\n  handleDecrease(id) {\n    this.props.dispatch(setCounter(id, 'decrease'))\n  }\n\n  handleRemove(id) {\n    this.props.dispatch(removeCounter(id))\n  }\n\n  handleOrderBy(type = 'title') {\n    this.props.dispatch(setOrder(type))\n  }\n\n  render() {\n    const { counters } = this.props;\n\n    return (\n      <div className=\"body\">\n        <Jumbotron >\n        <h1 className=\"display-3\">Bienvenido a CounterTest!</h1>\n        <p className=\"lead\">Este es un test de contadores para cornershop</p>\n        <hr className=\"my-2\" />\n        <Row>\n        <Col xs=\"6\">\n        <CounterAddForm onSubmit={this.handleAddCounter} />\n        </Col>\n        <Col xs=\"6\">\n        <CounterList\n          countersState={counters}\n          onOrder={this.handleOrderBy}\n          onDecrease={this.handleDecrease}\n          onIncrease={this.handleIncrease}\n          onRemove={this.handleRemove} />\n        </Col>\n      </Row>\n        \n        \n      \n      </Jumbotron>\n      </div>\n        \n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  counters: state.counters,\n});\n\nexport default connect(mapStateToProps)(Body);","import React from '../../node_modules/react';\nimport { Provider } from '../../node_modules/react-redux'\nimport { createStore, applyMiddleware } from '../../node_modules/redux';\nimport thunk from '../../node_modules/redux-thunk';\nimport { logger } from '../../node_modules/redux-logger';\nimport reducers from '../store/reducers';\nimport Body from '../Containers/Body';\n\nlet store = createStore(\n  reducers,\n  applyMiddleware(\n    thunk,\n    logger,\n  ),\n);\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <div className=\"root\">\n        <Body />\n      </div>\n    </Provider>\n  );\n}\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}